{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastPressedKey","handleKeyUp","event","currentlyPressedKey","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,eAAgB,IAFpB,EAaEC,YAAc,SAACC,GACb,IAAMC,EAAsBD,EAAME,IAElC,EAAKC,SAAS,CAAEL,eAAgBG,KAhBpC,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAmBE,WACE,IAAQD,EAAmBQ,KAAKT,MAAxBC,eAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAc,mCACiBA,EADjB,KAEX,kCA3Bd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.cf609862.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  lastPressedKey: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    lastPressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    const currentlyPressedKey = event.key;\n\n    this.setState({ lastPressedKey: currentlyPressedKey });\n  };\n\n  render() {\n    const { lastPressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastPressedKey\n            ? `The last pressed key is [${lastPressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}